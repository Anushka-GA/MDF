digraph torch_jit {
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	Identity_0 [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>Identity_0</b></td></tr><tr><td><font color="#188855">onnx_Conv_239</font> (shape: (512,))</td></tr><tr><td><font color="#1666ff">Identity_0</font> = <i>onnx::Identity</i>(<font color="#188855">onnx_Conv_239</font>)</td></tr><tr><td><i>onnx::Identity(input) = onnx_ops.identity(input)</i></td></tr><tr><td><font color="#cc3355">onnx_Conv_251</font> = <font color="#1666ff">Identity_0</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	Identity_1 [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>Identity_1</b></td></tr><tr><td><font color="#188855">onnx_Conv_239</font> (shape: (512,))</td></tr><tr><td><font color="#1666ff">Identity_1</font> = <i>onnx::Identity</i>(<font color="#188855">onnx_Conv_239</font>)</td></tr><tr><td><i>onnx::Identity(input) = onnx_ops.identity(input)</i></td></tr><tr><td><font color="#cc3355">onnx_Conv_248</font> = <font color="#1666ff">Identity_1</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	Identity_2 [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>Identity_2</b></td></tr><tr><td><font color="#188855">onnx_Conv_239</font> (shape: (512,))</td></tr><tr><td><font color="#1666ff">Identity_2</font> = <i>onnx::Identity</i>(<font color="#188855">onnx_Conv_239</font>)</td></tr><tr><td><i>onnx::Identity(input) = onnx_ops.identity(input)</i></td></tr><tr><td><font color="#cc3355">onnx_Conv_245</font> = <font color="#1666ff">Identity_2</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	Identity_3 [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>Identity_3</b></td></tr><tr><td><font color="#188855">onnx_Conv_239</font> (shape: (512,))</td></tr><tr><td><font color="#1666ff">Identity_3</font> = <i>onnx::Identity</i>(<font color="#188855">onnx_Conv_239</font>)</td></tr><tr><td><i>onnx::Identity(input) = onnx_ops.identity(input)</i></td></tr><tr><td><font color="#cc3355">onnx_Conv_242</font> = <font color="#1666ff">Identity_3</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	Identity_4 [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>Identity_4</b></td></tr><tr><td><font color="#188855">onnx_Conv_224</font> (shape: (256,))</td></tr><tr><td><font color="#1666ff">Identity_4</font> = <i>onnx::Identity</i>(<font color="#188855">onnx_Conv_224</font>)</td></tr><tr><td><i>onnx::Identity(input) = onnx_ops.identity(input)</i></td></tr><tr><td><font color="#cc3355">onnx_Conv_236</font> = <font color="#1666ff">Identity_4</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	Identity_5 [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>Identity_5</b></td></tr><tr><td><font color="#188855">onnx_Conv_224</font> (shape: (256,))</td></tr><tr><td><font color="#1666ff">Identity_5</font> = <i>onnx::Identity</i>(<font color="#188855">onnx_Conv_224</font>)</td></tr><tr><td><i>onnx::Identity(input) = onnx_ops.identity(input)</i></td></tr><tr><td><font color="#cc3355">onnx_Conv_233</font> = <font color="#1666ff">Identity_5</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	Identity_6 [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>Identity_6</b></td></tr><tr><td><font color="#188855">onnx_Conv_224</font> (shape: (256,))</td></tr><tr><td><font color="#1666ff">Identity_6</font> = <i>onnx::Identity</i>(<font color="#188855">onnx_Conv_224</font>)</td></tr><tr><td><i>onnx::Identity(input) = onnx_ops.identity(input)</i></td></tr><tr><td><font color="#cc3355">onnx_Conv_230</font> = <font color="#1666ff">Identity_6</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	Identity_7 [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>Identity_7</b></td></tr><tr><td><font color="#188855">onnx_Conv_224</font> (shape: (256,))</td></tr><tr><td><font color="#1666ff">Identity_7</font> = <i>onnx::Identity</i>(<font color="#188855">onnx_Conv_224</font>)</td></tr><tr><td><i>onnx::Identity(input) = onnx_ops.identity(input)</i></td></tr><tr><td><font color="#cc3355">onnx_Conv_227</font> = <font color="#1666ff">Identity_7</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	Identity_8 [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>Identity_8</b></td></tr><tr><td><font color="#188855">onnx_Conv_209</font> (shape: (128,))</td></tr><tr><td><font color="#1666ff">Identity_8</font> = <i>onnx::Identity</i>(<font color="#188855">onnx_Conv_209</font>)</td></tr><tr><td><i>onnx::Identity(input) = onnx_ops.identity(input)</i></td></tr><tr><td><font color="#cc3355">onnx_Conv_221</font> = <font color="#1666ff">Identity_8</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	Identity_9 [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>Identity_9</b></td></tr><tr><td><font color="#188855">onnx_Conv_209</font> (shape: (128,))</td></tr><tr><td><font color="#1666ff">Identity_9</font> = <i>onnx::Identity</i>(<font color="#188855">onnx_Conv_209</font>)</td></tr><tr><td><i>onnx::Identity(input) = onnx_ops.identity(input)</i></td></tr><tr><td><font color="#cc3355">onnx_Conv_218</font> = <font color="#1666ff">Identity_9</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	Identity_10 [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>Identity_10</b></td></tr><tr><td><font color="#188855">onnx_Conv_209</font> (shape: (128,))</td></tr><tr><td><font color="#1666ff">Identity_10</font> = <i>onnx::Identity</i>(<font color="#188855">onnx_Conv_209</font>)</td></tr><tr><td><i>onnx::Identity(input) = onnx_ops.identity(input)</i></td></tr><tr><td><font color="#cc3355">onnx_Conv_215</font> = <font color="#1666ff">Identity_10</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	Identity_11 [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>Identity_11</b></td></tr><tr><td><font color="#188855">onnx_Conv_209</font> (shape: (128,))</td></tr><tr><td><font color="#1666ff">Identity_11</font> = <i>onnx::Identity</i>(<font color="#188855">onnx_Conv_209</font>)</td></tr><tr><td><i>onnx::Identity(input) = onnx_ops.identity(input)</i></td></tr><tr><td><font color="#cc3355">onnx_Conv_212</font> = <font color="#1666ff">Identity_11</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	Identity_12 [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>Identity_12</b></td></tr><tr><td><font color="#188855">onnx_Conv_194</font> (shape: (64,))</td></tr><tr><td><font color="#1666ff">Identity_12</font> = <i>onnx::Identity</i>(<font color="#188855">onnx_Conv_194</font>)</td></tr><tr><td><i>onnx::Identity(input) = onnx_ops.identity(input)</i></td></tr><tr><td><font color="#cc3355">onnx_Conv_206</font> = <font color="#1666ff">Identity_12</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	Identity_13 [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>Identity_13</b></td></tr><tr><td><font color="#188855">onnx_Conv_194</font> (shape: (64,))</td></tr><tr><td><font color="#1666ff">Identity_13</font> = <i>onnx::Identity</i>(<font color="#188855">onnx_Conv_194</font>)</td></tr><tr><td><i>onnx::Identity(input) = onnx_ops.identity(input)</i></td></tr><tr><td><font color="#cc3355">onnx_Conv_203</font> = <font color="#1666ff">Identity_13</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	Identity_14 [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>Identity_14</b></td></tr><tr><td><font color="#188855">onnx_Conv_194</font> (shape: (64,))</td></tr><tr><td><font color="#1666ff">Identity_14</font> = <i>onnx::Identity</i>(<font color="#188855">onnx_Conv_194</font>)</td></tr><tr><td><i>onnx::Identity(input) = onnx_ops.identity(input)</i></td></tr><tr><td><font color="#cc3355">onnx_Conv_200</font> = <font color="#1666ff">Identity_14</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	Identity_15 [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>Identity_15</b></td></tr><tr><td><font color="#188855">onnx_Conv_194</font> (shape: (64,))</td></tr><tr><td><font color="#1666ff">Identity_15</font> = <i>onnx::Identity</i>(<font color="#188855">onnx_Conv_194</font>)</td></tr><tr><td><i>onnx::Identity(input) = onnx_ops.identity(input)</i></td></tr><tr><td><font color="#cc3355">onnx_Conv_197</font> = <font color="#1666ff">Identity_15</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/conv1/Conv" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/conv1/Conv</b></td></tr><tr><td><font color="#188855">input</font> (shape: (1, 3, 224, 224))</td></tr><tr><td><font color="#188855">onnx_Conv_193</font> (shape: (64, 3, 7, 7))</td></tr><tr><td><font color="#188855">onnx_Conv_194</font> (shape: (64,))</td></tr><tr><td><font color="#1666ff">dilations</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">group</font> = 1</td></tr><tr><td><font color="#1666ff">kernel_shape</font> = [7, 7](list)</td></tr><tr><td><font color="#1666ff">pads</font> = [3, 3, 3, 3](list)</td></tr><tr><td><font color="#1666ff">strides</font> = [2, 2](list)</td></tr><tr><td><font color="#1666ff">/conv1/Conv</font> = <i>onnx::Conv</i>(<font color="#188855">input</font>, <font color="#188855">onnx_Conv_193</font>, <font color="#188855">onnx_Conv_194</font>)</td></tr><tr><td><i>onnx::Conv(X, W, B) = onnx_ops.conv(X, W, B, auto_pad, dilations, group, kernel_shape, pads, strides)</i></td></tr><tr><td><font color="#cc3355">/conv1/Conv_output_0</font> = <font color="#1666ff">/conv1/Conv</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/relu/Relu" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/relu/Relu</b></td></tr><tr><td><font color="#188855">/conv1/Conv_output_0</font> (shape: (1, 64, 112, 112))</td></tr><tr><td><font color="#1666ff">/relu/Relu</font> = <i>onnx::Relu</i>(<font color="#188855">/conv1/Conv_output_0</font>)</td></tr><tr><td><i>onnx::Relu(X) = onnx_ops.relu(X)</i></td></tr><tr><td><font color="#cc3355">/relu/Relu_output_0</font> = <font color="#1666ff">/relu/Relu</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/maxpool/MaxPool" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/maxpool/MaxPool</b></td></tr><tr><td><font color="#188855">/relu/Relu_output_0</font> (shape: (1, 64, 112, 112))</td></tr><tr><td><font color="#1666ff">kernel_shape</font> = [3, 3](list)</td></tr><tr><td><font color="#1666ff">pads</font> = [1, 1, 1, 1](list)</td></tr><tr><td><font color="#1666ff">strides</font> = [2, 2](list)</td></tr><tr><td><font color="#1666ff">/maxpool/MaxPool</font> = <i>onnx::MaxPool</i>(<font color="#188855">/relu/Relu_output_0</font>)</td></tr><tr><td><i>onnx::MaxPool(X) = onnx_ops.maxpool(X, auto_pad, ceil_mode, dilations, kernel_shape, pads, storage_order, strides)</i></td></tr><tr><td><font color="#cc3355">/maxpool/MaxPool_output_0</font> = <font color="#1666ff">/maxpool/MaxPool</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer1/layer1.0/conv1/Conv" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer1/layer1.0/conv1/Conv</b></td></tr><tr><td><font color="#188855">/maxpool/MaxPool_output_0</font> (shape: (1, 64, 56, 56))</td></tr><tr><td><font color="#188855">onnx_Conv_196</font> (shape: (64, 64, 3, 3))</td></tr><tr><td><font color="#188855">onnx_Conv_197</font> (shape: (64,))</td></tr><tr><td><font color="#1666ff">dilations</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">group</font> = 1</td></tr><tr><td><font color="#1666ff">kernel_shape</font> = [3, 3](list)</td></tr><tr><td><font color="#1666ff">pads</font> = [1, 1, 1, 1](list)</td></tr><tr><td><font color="#1666ff">strides</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">/layer1/layer1.0/conv1/Conv</font> = <i>onnx::Conv</i>(<font color="#188855">/maxpool/MaxPool_output_0</font>, <font color="#188855">onnx_Conv_196</font>, <font color="#188855">onnx_Conv_197</font>)</td></tr><tr><td><i>onnx::Conv(X, W, B) = onnx_ops.conv(X, W, B, auto_pad, dilations, group, kernel_shape, pads, strides)</i></td></tr><tr><td><font color="#cc3355">/layer1/layer1_0/conv1/Conv_output_0</font> = <font color="#1666ff">/layer1/layer1.0/conv1/Conv</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer1/layer1.0/relu/Relu" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer1/layer1.0/relu/Relu</b></td></tr><tr><td><font color="#188855">/layer1/layer1_0/conv1/Conv_output_0</font> (shape: (1, 64, 56, 56))</td></tr><tr><td><font color="#1666ff">/layer1/layer1.0/relu/Relu</font> = <i>onnx::Relu</i>(<font color="#188855">/layer1/layer1_0/conv1/Conv_output_0</font>)</td></tr><tr><td><i>onnx::Relu(X) = onnx_ops.relu(X)</i></td></tr><tr><td><font color="#cc3355">/layer1/layer1_0/relu/Relu_output_0</font> = <font color="#1666ff">/layer1/layer1.0/relu/Relu</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer1/layer1.0/conv2/Conv" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer1/layer1.0/conv2/Conv</b></td></tr><tr><td><font color="#188855">/layer1/layer1_0/relu/Relu_output_0</font> (shape: (1, 64, 56, 56))</td></tr><tr><td><font color="#188855">onnx_Conv_199</font> (shape: (64, 64, 3, 3))</td></tr><tr><td><font color="#188855">onnx_Conv_200</font> (shape: (64,))</td></tr><tr><td><font color="#1666ff">dilations</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">group</font> = 1</td></tr><tr><td><font color="#1666ff">kernel_shape</font> = [3, 3](list)</td></tr><tr><td><font color="#1666ff">pads</font> = [1, 1, 1, 1](list)</td></tr><tr><td><font color="#1666ff">strides</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">/layer1/layer1.0/conv2/Conv</font> = <i>onnx::Conv</i>(<font color="#188855">/layer1/layer1_0/relu/Relu_output_0</font>, <font color="#188855">onnx_Conv_199</font>, <font color="#188855">onnx_Conv_200</font>)</td></tr><tr><td><i>onnx::Conv(X, W, B) = onnx_ops.conv(X, W, B, auto_pad, dilations, group, kernel_shape, pads, strides)</i></td></tr><tr><td><font color="#cc3355">/layer1/layer1_0/conv2/Conv_output_0</font> = <font color="#1666ff">/layer1/layer1.0/conv2/Conv</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer1/layer1.0/Add" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer1/layer1.0/Add</b></td></tr><tr><td><font color="#188855">/layer1/layer1_0/conv2/Conv_output_0</font> (shape: (1, 64, 56, 56))</td></tr><tr><td><font color="#188855">/maxpool/MaxPool_output_0</font> (shape: (1, 64, 56, 56))</td></tr><tr><td><font color="#1666ff">/layer1/layer1.0/Add</font> = <i>onnx::Add</i>(<font color="#188855">/layer1/layer1_0/conv2/Conv_output_0</font>, <font color="#188855">/maxpool/MaxPool_output_0</font>)</td></tr><tr><td><i>onnx::Add(A, B) = onnx_ops.add(A, B)</i></td></tr><tr><td><font color="#cc3355">/layer1/layer1_0/Add_output_0</font> = <font color="#1666ff">/layer1/layer1.0/Add</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer1/layer1.0/relu_1/Relu" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer1/layer1.0/relu_1/Relu</b></td></tr><tr><td><font color="#188855">/layer1/layer1_0/Add_output_0</font> (shape: (1, 64, 56, 56))</td></tr><tr><td><font color="#1666ff">/layer1/layer1.0/relu_1/Relu</font> = <i>onnx::Relu</i>(<font color="#188855">/layer1/layer1_0/Add_output_0</font>)</td></tr><tr><td><i>onnx::Relu(X) = onnx_ops.relu(X)</i></td></tr><tr><td><font color="#cc3355">/layer1/layer1_0/relu_1/Relu_output_0</font> = <font color="#1666ff">/layer1/layer1.0/relu_1/Relu</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer1/layer1.1/conv1/Conv" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer1/layer1.1/conv1/Conv</b></td></tr><tr><td><font color="#188855">/layer1/layer1_0/relu_1/Relu_output_0</font> (shape: (1, 64, 56, 56))</td></tr><tr><td><font color="#188855">onnx_Conv_202</font> (shape: (64, 64, 3, 3))</td></tr><tr><td><font color="#188855">onnx_Conv_203</font> (shape: (64,))</td></tr><tr><td><font color="#1666ff">dilations</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">group</font> = 1</td></tr><tr><td><font color="#1666ff">kernel_shape</font> = [3, 3](list)</td></tr><tr><td><font color="#1666ff">pads</font> = [1, 1, 1, 1](list)</td></tr><tr><td><font color="#1666ff">strides</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">/layer1/layer1.1/conv1/Conv</font> = <i>onnx::Conv</i>(<font color="#188855">/layer1/layer1_0/relu_1/Relu_output_0</font>, <font color="#188855">onnx_Conv_202</font>, <font color="#188855">onnx_Conv_203</font>)</td></tr><tr><td><i>onnx::Conv(X, W, B) = onnx_ops.conv(X, W, B, auto_pad, dilations, group, kernel_shape, pads, strides)</i></td></tr><tr><td><font color="#cc3355">/layer1/layer1_1/conv1/Conv_output_0</font> = <font color="#1666ff">/layer1/layer1.1/conv1/Conv</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer1/layer1.1/relu/Relu" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer1/layer1.1/relu/Relu</b></td></tr><tr><td><font color="#188855">/layer1/layer1_1/conv1/Conv_output_0</font> (shape: (1, 64, 56, 56))</td></tr><tr><td><font color="#1666ff">/layer1/layer1.1/relu/Relu</font> = <i>onnx::Relu</i>(<font color="#188855">/layer1/layer1_1/conv1/Conv_output_0</font>)</td></tr><tr><td><i>onnx::Relu(X) = onnx_ops.relu(X)</i></td></tr><tr><td><font color="#cc3355">/layer1/layer1_1/relu/Relu_output_0</font> = <font color="#1666ff">/layer1/layer1.1/relu/Relu</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer1/layer1.1/conv2/Conv" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer1/layer1.1/conv2/Conv</b></td></tr><tr><td><font color="#188855">/layer1/layer1_1/relu/Relu_output_0</font> (shape: (1, 64, 56, 56))</td></tr><tr><td><font color="#188855">onnx_Conv_205</font> (shape: (64, 64, 3, 3))</td></tr><tr><td><font color="#188855">onnx_Conv_206</font> (shape: (64,))</td></tr><tr><td><font color="#1666ff">dilations</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">group</font> = 1</td></tr><tr><td><font color="#1666ff">kernel_shape</font> = [3, 3](list)</td></tr><tr><td><font color="#1666ff">pads</font> = [1, 1, 1, 1](list)</td></tr><tr><td><font color="#1666ff">strides</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">/layer1/layer1.1/conv2/Conv</font> = <i>onnx::Conv</i>(<font color="#188855">/layer1/layer1_1/relu/Relu_output_0</font>, <font color="#188855">onnx_Conv_205</font>, <font color="#188855">onnx_Conv_206</font>)</td></tr><tr><td><i>onnx::Conv(X, W, B) = onnx_ops.conv(X, W, B, auto_pad, dilations, group, kernel_shape, pads, strides)</i></td></tr><tr><td><font color="#cc3355">/layer1/layer1_1/conv2/Conv_output_0</font> = <font color="#1666ff">/layer1/layer1.1/conv2/Conv</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer1/layer1.1/Add" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer1/layer1.1/Add</b></td></tr><tr><td><font color="#188855">/layer1/layer1_1/conv2/Conv_output_0</font> (shape: (1, 64, 56, 56))</td></tr><tr><td><font color="#188855">/layer1/layer1_0/relu_1/Relu_output_0</font> (shape: (1, 64, 56, 56))</td></tr><tr><td><font color="#1666ff">/layer1/layer1.1/Add</font> = <i>onnx::Add</i>(<font color="#188855">/layer1/layer1_1/conv2/Conv_output_0</font>, <font color="#188855">/layer1/layer1_0/relu_1/Relu_output_0</font>)</td></tr><tr><td><i>onnx::Add(A, B) = onnx_ops.add(A, B)</i></td></tr><tr><td><font color="#cc3355">/layer1/layer1_1/Add_output_0</font> = <font color="#1666ff">/layer1/layer1.1/Add</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer1/layer1.1/relu_1/Relu" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer1/layer1.1/relu_1/Relu</b></td></tr><tr><td><font color="#188855">/layer1/layer1_1/Add_output_0</font> (shape: (1, 64, 56, 56))</td></tr><tr><td><font color="#1666ff">/layer1/layer1.1/relu_1/Relu</font> = <i>onnx::Relu</i>(<font color="#188855">/layer1/layer1_1/Add_output_0</font>)</td></tr><tr><td><i>onnx::Relu(X) = onnx_ops.relu(X)</i></td></tr><tr><td><font color="#cc3355">/layer1/layer1_1/relu_1/Relu_output_0</font> = <font color="#1666ff">/layer1/layer1.1/relu_1/Relu</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer2/layer2.0/conv1/Conv" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer2/layer2.0/conv1/Conv</b></td></tr><tr><td><font color="#188855">/layer1/layer1_1/relu_1/Relu_output_0</font> (shape: (1, 64, 56, 56))</td></tr><tr><td><font color="#188855">onnx_Conv_208</font> (shape: (128, 64, 3, 3))</td></tr><tr><td><font color="#188855">onnx_Conv_209</font> (shape: (128,))</td></tr><tr><td><font color="#1666ff">dilations</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">group</font> = 1</td></tr><tr><td><font color="#1666ff">kernel_shape</font> = [3, 3](list)</td></tr><tr><td><font color="#1666ff">pads</font> = [1, 1, 1, 1](list)</td></tr><tr><td><font color="#1666ff">strides</font> = [2, 2](list)</td></tr><tr><td><font color="#1666ff">/layer2/layer2.0/conv1/Conv</font> = <i>onnx::Conv</i>(<font color="#188855">/layer1/layer1_1/relu_1/Relu_output_0</font>, <font color="#188855">onnx_Conv_208</font>, <font color="#188855">onnx_Conv_209</font>)</td></tr><tr><td><i>onnx::Conv(X, W, B) = onnx_ops.conv(X, W, B, auto_pad, dilations, group, kernel_shape, pads, strides)</i></td></tr><tr><td><font color="#cc3355">/layer2/layer2_0/conv1/Conv_output_0</font> = <font color="#1666ff">/layer2/layer2.0/conv1/Conv</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer2/layer2.0/relu/Relu" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer2/layer2.0/relu/Relu</b></td></tr><tr><td><font color="#188855">/layer2/layer2_0/conv1/Conv_output_0</font> (shape: (1, 128, 28, 28))</td></tr><tr><td><font color="#1666ff">/layer2/layer2.0/relu/Relu</font> = <i>onnx::Relu</i>(<font color="#188855">/layer2/layer2_0/conv1/Conv_output_0</font>)</td></tr><tr><td><i>onnx::Relu(X) = onnx_ops.relu(X)</i></td></tr><tr><td><font color="#cc3355">/layer2/layer2_0/relu/Relu_output_0</font> = <font color="#1666ff">/layer2/layer2.0/relu/Relu</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer2/layer2.0/conv2/Conv" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer2/layer2.0/conv2/Conv</b></td></tr><tr><td><font color="#188855">/layer2/layer2_0/relu/Relu_output_0</font> (shape: (1, 128, 28, 28))</td></tr><tr><td><font color="#188855">onnx_Conv_211</font> (shape: (128, 128, 3, 3))</td></tr><tr><td><font color="#188855">onnx_Conv_212</font> (shape: (128,))</td></tr><tr><td><font color="#1666ff">dilations</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">group</font> = 1</td></tr><tr><td><font color="#1666ff">kernel_shape</font> = [3, 3](list)</td></tr><tr><td><font color="#1666ff">pads</font> = [1, 1, 1, 1](list)</td></tr><tr><td><font color="#1666ff">strides</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">/layer2/layer2.0/conv2/Conv</font> = <i>onnx::Conv</i>(<font color="#188855">/layer2/layer2_0/relu/Relu_output_0</font>, <font color="#188855">onnx_Conv_211</font>, <font color="#188855">onnx_Conv_212</font>)</td></tr><tr><td><i>onnx::Conv(X, W, B) = onnx_ops.conv(X, W, B, auto_pad, dilations, group, kernel_shape, pads, strides)</i></td></tr><tr><td><font color="#cc3355">/layer2/layer2_0/conv2/Conv_output_0</font> = <font color="#1666ff">/layer2/layer2.0/conv2/Conv</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer2/layer2.0/downsample/downsample.0/Conv" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer2/layer2.0/downsample/downsample.0/Conv</b></td></tr><tr><td><font color="#188855">/layer1/layer1_1/relu_1/Relu_output_0</font> (shape: (1, 64, 56, 56))</td></tr><tr><td><font color="#188855">onnx_Conv_214</font> (shape: (128, 64, 1, 1))</td></tr><tr><td><font color="#188855">onnx_Conv_215</font> (shape: (128,))</td></tr><tr><td><font color="#1666ff">dilations</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">group</font> = 1</td></tr><tr><td><font color="#1666ff">kernel_shape</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">pads</font> = [0, 0, 0, 0](list)</td></tr><tr><td><font color="#1666ff">strides</font> = [2, 2](list)</td></tr><tr><td><font color="#1666ff">/layer2/layer2.0/downsample/downsample.0/Conv</font> = <i>onnx::Conv</i>(<font color="#188855">/layer1/layer1_1/relu_1/Relu_output_0</font>, <font color="#188855">onnx_Conv_214</font>, <font color="#188855">onnx_Conv_215</font>)</td></tr><tr><td><i>onnx::Conv(X, W, B) = onnx_ops.conv(X, W, B, auto_pad, dilations, group, kernel_shape, pads, strides)</i></td></tr><tr><td><font color="#cc3355">/layer2/layer2_0/downsample/downsample_0/Conv_output_0</font> = <font color="#1666ff">/layer2/layer2.0/downsample/downsample.0/Conv</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer2/layer2.0/Add" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer2/layer2.0/Add</b></td></tr><tr><td><font color="#188855">/layer2/layer2_0/conv2/Conv_output_0</font> (shape: (1, 128, 28, 28))</td></tr><tr><td><font color="#188855">/layer2/layer2_0/downsample/downsample_0/Conv_output_0</font> (shape: (1, 128, 28, 28))</td></tr><tr><td><font color="#1666ff">/layer2/layer2.0/Add</font> = <i>onnx::Add</i>(<font color="#188855">/layer2/layer2_0/conv2/Conv_output_0</font>, <font color="#188855">/layer2/layer2_0/downsample/downsample_0/Conv_output_0</font>)</td></tr><tr><td><i>onnx::Add(A, B) = onnx_ops.add(A, B)</i></td></tr><tr><td><font color="#cc3355">/layer2/layer2_0/Add_output_0</font> = <font color="#1666ff">/layer2/layer2.0/Add</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer2/layer2.0/relu_1/Relu" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer2/layer2.0/relu_1/Relu</b></td></tr><tr><td><font color="#188855">/layer2/layer2_0/Add_output_0</font> (shape: (1, 128, 28, 28))</td></tr><tr><td><font color="#1666ff">/layer2/layer2.0/relu_1/Relu</font> = <i>onnx::Relu</i>(<font color="#188855">/layer2/layer2_0/Add_output_0</font>)</td></tr><tr><td><i>onnx::Relu(X) = onnx_ops.relu(X)</i></td></tr><tr><td><font color="#cc3355">/layer2/layer2_0/relu_1/Relu_output_0</font> = <font color="#1666ff">/layer2/layer2.0/relu_1/Relu</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer2/layer2.1/conv1/Conv" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer2/layer2.1/conv1/Conv</b></td></tr><tr><td><font color="#188855">/layer2/layer2_0/relu_1/Relu_output_0</font> (shape: (1, 128, 28, 28))</td></tr><tr><td><font color="#188855">onnx_Conv_217</font> (shape: (128, 128, 3, 3))</td></tr><tr><td><font color="#188855">onnx_Conv_218</font> (shape: (128,))</td></tr><tr><td><font color="#1666ff">dilations</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">group</font> = 1</td></tr><tr><td><font color="#1666ff">kernel_shape</font> = [3, 3](list)</td></tr><tr><td><font color="#1666ff">pads</font> = [1, 1, 1, 1](list)</td></tr><tr><td><font color="#1666ff">strides</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">/layer2/layer2.1/conv1/Conv</font> = <i>onnx::Conv</i>(<font color="#188855">/layer2/layer2_0/relu_1/Relu_output_0</font>, <font color="#188855">onnx_Conv_217</font>, <font color="#188855">onnx_Conv_218</font>)</td></tr><tr><td><i>onnx::Conv(X, W, B) = onnx_ops.conv(X, W, B, auto_pad, dilations, group, kernel_shape, pads, strides)</i></td></tr><tr><td><font color="#cc3355">/layer2/layer2_1/conv1/Conv_output_0</font> = <font color="#1666ff">/layer2/layer2.1/conv1/Conv</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer2/layer2.1/relu/Relu" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer2/layer2.1/relu/Relu</b></td></tr><tr><td><font color="#188855">/layer2/layer2_1/conv1/Conv_output_0</font> (shape: (1, 128, 28, 28))</td></tr><tr><td><font color="#1666ff">/layer2/layer2.1/relu/Relu</font> = <i>onnx::Relu</i>(<font color="#188855">/layer2/layer2_1/conv1/Conv_output_0</font>)</td></tr><tr><td><i>onnx::Relu(X) = onnx_ops.relu(X)</i></td></tr><tr><td><font color="#cc3355">/layer2/layer2_1/relu/Relu_output_0</font> = <font color="#1666ff">/layer2/layer2.1/relu/Relu</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer2/layer2.1/conv2/Conv" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer2/layer2.1/conv2/Conv</b></td></tr><tr><td><font color="#188855">/layer2/layer2_1/relu/Relu_output_0</font> (shape: (1, 128, 28, 28))</td></tr><tr><td><font color="#188855">onnx_Conv_220</font> (shape: (128, 128, 3, 3))</td></tr><tr><td><font color="#188855">onnx_Conv_221</font> (shape: (128,))</td></tr><tr><td><font color="#1666ff">dilations</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">group</font> = 1</td></tr><tr><td><font color="#1666ff">kernel_shape</font> = [3, 3](list)</td></tr><tr><td><font color="#1666ff">pads</font> = [1, 1, 1, 1](list)</td></tr><tr><td><font color="#1666ff">strides</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">/layer2/layer2.1/conv2/Conv</font> = <i>onnx::Conv</i>(<font color="#188855">/layer2/layer2_1/relu/Relu_output_0</font>, <font color="#188855">onnx_Conv_220</font>, <font color="#188855">onnx_Conv_221</font>)</td></tr><tr><td><i>onnx::Conv(X, W, B) = onnx_ops.conv(X, W, B, auto_pad, dilations, group, kernel_shape, pads, strides)</i></td></tr><tr><td><font color="#cc3355">/layer2/layer2_1/conv2/Conv_output_0</font> = <font color="#1666ff">/layer2/layer2.1/conv2/Conv</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer2/layer2.1/Add" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer2/layer2.1/Add</b></td></tr><tr><td><font color="#188855">/layer2/layer2_1/conv2/Conv_output_0</font> (shape: (1, 128, 28, 28))</td></tr><tr><td><font color="#188855">/layer2/layer2_0/relu_1/Relu_output_0</font> (shape: (1, 128, 28, 28))</td></tr><tr><td><font color="#1666ff">/layer2/layer2.1/Add</font> = <i>onnx::Add</i>(<font color="#188855">/layer2/layer2_1/conv2/Conv_output_0</font>, <font color="#188855">/layer2/layer2_0/relu_1/Relu_output_0</font>)</td></tr><tr><td><i>onnx::Add(A, B) = onnx_ops.add(A, B)</i></td></tr><tr><td><font color="#cc3355">/layer2/layer2_1/Add_output_0</font> = <font color="#1666ff">/layer2/layer2.1/Add</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer2/layer2.1/relu_1/Relu" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer2/layer2.1/relu_1/Relu</b></td></tr><tr><td><font color="#188855">/layer2/layer2_1/Add_output_0</font> (shape: (1, 128, 28, 28))</td></tr><tr><td><font color="#1666ff">/layer2/layer2.1/relu_1/Relu</font> = <i>onnx::Relu</i>(<font color="#188855">/layer2/layer2_1/Add_output_0</font>)</td></tr><tr><td><i>onnx::Relu(X) = onnx_ops.relu(X)</i></td></tr><tr><td><font color="#cc3355">/layer2/layer2_1/relu_1/Relu_output_0</font> = <font color="#1666ff">/layer2/layer2.1/relu_1/Relu</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer3/layer3.0/conv1/Conv" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer3/layer3.0/conv1/Conv</b></td></tr><tr><td><font color="#188855">/layer2/layer2_1/relu_1/Relu_output_0</font> (shape: (1, 128, 28, 28))</td></tr><tr><td><font color="#188855">onnx_Conv_223</font> (shape: (256, 128, 3, 3))</td></tr><tr><td><font color="#188855">onnx_Conv_224</font> (shape: (256,))</td></tr><tr><td><font color="#1666ff">dilations</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">group</font> = 1</td></tr><tr><td><font color="#1666ff">kernel_shape</font> = [3, 3](list)</td></tr><tr><td><font color="#1666ff">pads</font> = [1, 1, 1, 1](list)</td></tr><tr><td><font color="#1666ff">strides</font> = [2, 2](list)</td></tr><tr><td><font color="#1666ff">/layer3/layer3.0/conv1/Conv</font> = <i>onnx::Conv</i>(<font color="#188855">/layer2/layer2_1/relu_1/Relu_output_0</font>, <font color="#188855">onnx_Conv_223</font>, <font color="#188855">onnx_Conv_224</font>)</td></tr><tr><td><i>onnx::Conv(X, W, B) = onnx_ops.conv(X, W, B, auto_pad, dilations, group, kernel_shape, pads, strides)</i></td></tr><tr><td><font color="#cc3355">/layer3/layer3_0/conv1/Conv_output_0</font> = <font color="#1666ff">/layer3/layer3.0/conv1/Conv</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer3/layer3.0/relu/Relu" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer3/layer3.0/relu/Relu</b></td></tr><tr><td><font color="#188855">/layer3/layer3_0/conv1/Conv_output_0</font> (shape: (1, 256, 14, 14))</td></tr><tr><td><font color="#1666ff">/layer3/layer3.0/relu/Relu</font> = <i>onnx::Relu</i>(<font color="#188855">/layer3/layer3_0/conv1/Conv_output_0</font>)</td></tr><tr><td><i>onnx::Relu(X) = onnx_ops.relu(X)</i></td></tr><tr><td><font color="#cc3355">/layer3/layer3_0/relu/Relu_output_0</font> = <font color="#1666ff">/layer3/layer3.0/relu/Relu</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer3/layer3.0/conv2/Conv" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer3/layer3.0/conv2/Conv</b></td></tr><tr><td><font color="#188855">/layer3/layer3_0/relu/Relu_output_0</font> (shape: (1, 256, 14, 14))</td></tr><tr><td><font color="#188855">onnx_Conv_226</font> (shape: (256, 256, 3, 3))</td></tr><tr><td><font color="#188855">onnx_Conv_227</font> (shape: (256,))</td></tr><tr><td><font color="#1666ff">dilations</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">group</font> = 1</td></tr><tr><td><font color="#1666ff">kernel_shape</font> = [3, 3](list)</td></tr><tr><td><font color="#1666ff">pads</font> = [1, 1, 1, 1](list)</td></tr><tr><td><font color="#1666ff">strides</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">/layer3/layer3.0/conv2/Conv</font> = <i>onnx::Conv</i>(<font color="#188855">/layer3/layer3_0/relu/Relu_output_0</font>, <font color="#188855">onnx_Conv_226</font>, <font color="#188855">onnx_Conv_227</font>)</td></tr><tr><td><i>onnx::Conv(X, W, B) = onnx_ops.conv(X, W, B, auto_pad, dilations, group, kernel_shape, pads, strides)</i></td></tr><tr><td><font color="#cc3355">/layer3/layer3_0/conv2/Conv_output_0</font> = <font color="#1666ff">/layer3/layer3.0/conv2/Conv</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer3/layer3.0/downsample/downsample.0/Conv" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer3/layer3.0/downsample/downsample.0/Conv</b></td></tr><tr><td><font color="#188855">/layer2/layer2_1/relu_1/Relu_output_0</font> (shape: (1, 128, 28, 28))</td></tr><tr><td><font color="#188855">onnx_Conv_229</font> (shape: (256, 128, 1, 1))</td></tr><tr><td><font color="#188855">onnx_Conv_230</font> (shape: (256,))</td></tr><tr><td><font color="#1666ff">dilations</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">group</font> = 1</td></tr><tr><td><font color="#1666ff">kernel_shape</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">pads</font> = [0, 0, 0, 0](list)</td></tr><tr><td><font color="#1666ff">strides</font> = [2, 2](list)</td></tr><tr><td><font color="#1666ff">/layer3/layer3.0/downsample/downsample.0/Conv</font> = <i>onnx::Conv</i>(<font color="#188855">/layer2/layer2_1/relu_1/Relu_output_0</font>, <font color="#188855">onnx_Conv_229</font>, <font color="#188855">onnx_Conv_230</font>)</td></tr><tr><td><i>onnx::Conv(X, W, B) = onnx_ops.conv(X, W, B, auto_pad, dilations, group, kernel_shape, pads, strides)</i></td></tr><tr><td><font color="#cc3355">/layer3/layer3_0/downsample/downsample_0/Conv_output_0</font> = <font color="#1666ff">/layer3/layer3.0/downsample/downsample.0/Conv</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer3/layer3.0/Add" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer3/layer3.0/Add</b></td></tr><tr><td><font color="#188855">/layer3/layer3_0/conv2/Conv_output_0</font> (shape: (1, 256, 14, 14))</td></tr><tr><td><font color="#188855">/layer3/layer3_0/downsample/downsample_0/Conv_output_0</font> (shape: (1, 256, 14, 14))</td></tr><tr><td><font color="#1666ff">/layer3/layer3.0/Add</font> = <i>onnx::Add</i>(<font color="#188855">/layer3/layer3_0/conv2/Conv_output_0</font>, <font color="#188855">/layer3/layer3_0/downsample/downsample_0/Conv_output_0</font>)</td></tr><tr><td><i>onnx::Add(A, B) = onnx_ops.add(A, B)</i></td></tr><tr><td><font color="#cc3355">/layer3/layer3_0/Add_output_0</font> = <font color="#1666ff">/layer3/layer3.0/Add</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer3/layer3.0/relu_1/Relu" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer3/layer3.0/relu_1/Relu</b></td></tr><tr><td><font color="#188855">/layer3/layer3_0/Add_output_0</font> (shape: (1, 256, 14, 14))</td></tr><tr><td><font color="#1666ff">/layer3/layer3.0/relu_1/Relu</font> = <i>onnx::Relu</i>(<font color="#188855">/layer3/layer3_0/Add_output_0</font>)</td></tr><tr><td><i>onnx::Relu(X) = onnx_ops.relu(X)</i></td></tr><tr><td><font color="#cc3355">/layer3/layer3_0/relu_1/Relu_output_0</font> = <font color="#1666ff">/layer3/layer3.0/relu_1/Relu</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer3/layer3.1/conv1/Conv" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer3/layer3.1/conv1/Conv</b></td></tr><tr><td><font color="#188855">/layer3/layer3_0/relu_1/Relu_output_0</font> (shape: (1, 256, 14, 14))</td></tr><tr><td><font color="#188855">onnx_Conv_232</font> (shape: (256, 256, 3, 3))</td></tr><tr><td><font color="#188855">onnx_Conv_233</font> (shape: (256,))</td></tr><tr><td><font color="#1666ff">dilations</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">group</font> = 1</td></tr><tr><td><font color="#1666ff">kernel_shape</font> = [3, 3](list)</td></tr><tr><td><font color="#1666ff">pads</font> = [1, 1, 1, 1](list)</td></tr><tr><td><font color="#1666ff">strides</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">/layer3/layer3.1/conv1/Conv</font> = <i>onnx::Conv</i>(<font color="#188855">/layer3/layer3_0/relu_1/Relu_output_0</font>, <font color="#188855">onnx_Conv_232</font>, <font color="#188855">onnx_Conv_233</font>)</td></tr><tr><td><i>onnx::Conv(X, W, B) = onnx_ops.conv(X, W, B, auto_pad, dilations, group, kernel_shape, pads, strides)</i></td></tr><tr><td><font color="#cc3355">/layer3/layer3_1/conv1/Conv_output_0</font> = <font color="#1666ff">/layer3/layer3.1/conv1/Conv</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer3/layer3.1/relu/Relu" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer3/layer3.1/relu/Relu</b></td></tr><tr><td><font color="#188855">/layer3/layer3_1/conv1/Conv_output_0</font> (shape: (1, 256, 14, 14))</td></tr><tr><td><font color="#1666ff">/layer3/layer3.1/relu/Relu</font> = <i>onnx::Relu</i>(<font color="#188855">/layer3/layer3_1/conv1/Conv_output_0</font>)</td></tr><tr><td><i>onnx::Relu(X) = onnx_ops.relu(X)</i></td></tr><tr><td><font color="#cc3355">/layer3/layer3_1/relu/Relu_output_0</font> = <font color="#1666ff">/layer3/layer3.1/relu/Relu</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer3/layer3.1/conv2/Conv" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer3/layer3.1/conv2/Conv</b></td></tr><tr><td><font color="#188855">/layer3/layer3_1/relu/Relu_output_0</font> (shape: (1, 256, 14, 14))</td></tr><tr><td><font color="#188855">onnx_Conv_235</font> (shape: (256, 256, 3, 3))</td></tr><tr><td><font color="#188855">onnx_Conv_236</font> (shape: (256,))</td></tr><tr><td><font color="#1666ff">dilations</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">group</font> = 1</td></tr><tr><td><font color="#1666ff">kernel_shape</font> = [3, 3](list)</td></tr><tr><td><font color="#1666ff">pads</font> = [1, 1, 1, 1](list)</td></tr><tr><td><font color="#1666ff">strides</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">/layer3/layer3.1/conv2/Conv</font> = <i>onnx::Conv</i>(<font color="#188855">/layer3/layer3_1/relu/Relu_output_0</font>, <font color="#188855">onnx_Conv_235</font>, <font color="#188855">onnx_Conv_236</font>)</td></tr><tr><td><i>onnx::Conv(X, W, B) = onnx_ops.conv(X, W, B, auto_pad, dilations, group, kernel_shape, pads, strides)</i></td></tr><tr><td><font color="#cc3355">/layer3/layer3_1/conv2/Conv_output_0</font> = <font color="#1666ff">/layer3/layer3.1/conv2/Conv</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer3/layer3.1/Add" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer3/layer3.1/Add</b></td></tr><tr><td><font color="#188855">/layer3/layer3_1/conv2/Conv_output_0</font> (shape: (1, 256, 14, 14))</td></tr><tr><td><font color="#188855">/layer3/layer3_0/relu_1/Relu_output_0</font> (shape: (1, 256, 14, 14))</td></tr><tr><td><font color="#1666ff">/layer3/layer3.1/Add</font> = <i>onnx::Add</i>(<font color="#188855">/layer3/layer3_1/conv2/Conv_output_0</font>, <font color="#188855">/layer3/layer3_0/relu_1/Relu_output_0</font>)</td></tr><tr><td><i>onnx::Add(A, B) = onnx_ops.add(A, B)</i></td></tr><tr><td><font color="#cc3355">/layer3/layer3_1/Add_output_0</font> = <font color="#1666ff">/layer3/layer3.1/Add</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer3/layer3.1/relu_1/Relu" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer3/layer3.1/relu_1/Relu</b></td></tr><tr><td><font color="#188855">/layer3/layer3_1/Add_output_0</font> (shape: (1, 256, 14, 14))</td></tr><tr><td><font color="#1666ff">/layer3/layer3.1/relu_1/Relu</font> = <i>onnx::Relu</i>(<font color="#188855">/layer3/layer3_1/Add_output_0</font>)</td></tr><tr><td><i>onnx::Relu(X) = onnx_ops.relu(X)</i></td></tr><tr><td><font color="#cc3355">/layer3/layer3_1/relu_1/Relu_output_0</font> = <font color="#1666ff">/layer3/layer3.1/relu_1/Relu</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer4/layer4.0/conv1/Conv" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer4/layer4.0/conv1/Conv</b></td></tr><tr><td><font color="#188855">/layer3/layer3_1/relu_1/Relu_output_0</font> (shape: (1, 256, 14, 14))</td></tr><tr><td><font color="#188855">onnx_Conv_238</font> (shape: (512, 256, 3, 3))</td></tr><tr><td><font color="#188855">onnx_Conv_239</font> (shape: (512,))</td></tr><tr><td><font color="#1666ff">dilations</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">group</font> = 1</td></tr><tr><td><font color="#1666ff">kernel_shape</font> = [3, 3](list)</td></tr><tr><td><font color="#1666ff">pads</font> = [1, 1, 1, 1](list)</td></tr><tr><td><font color="#1666ff">strides</font> = [2, 2](list)</td></tr><tr><td><font color="#1666ff">/layer4/layer4.0/conv1/Conv</font> = <i>onnx::Conv</i>(<font color="#188855">/layer3/layer3_1/relu_1/Relu_output_0</font>, <font color="#188855">onnx_Conv_238</font>, <font color="#188855">onnx_Conv_239</font>)</td></tr><tr><td><i>onnx::Conv(X, W, B) = onnx_ops.conv(X, W, B, auto_pad, dilations, group, kernel_shape, pads, strides)</i></td></tr><tr><td><font color="#cc3355">/layer4/layer4_0/conv1/Conv_output_0</font> = <font color="#1666ff">/layer4/layer4.0/conv1/Conv</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer4/layer4.0/relu/Relu" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer4/layer4.0/relu/Relu</b></td></tr><tr><td><font color="#188855">/layer4/layer4_0/conv1/Conv_output_0</font> (shape: (1, 512, 7, 7))</td></tr><tr><td><font color="#1666ff">/layer4/layer4.0/relu/Relu</font> = <i>onnx::Relu</i>(<font color="#188855">/layer4/layer4_0/conv1/Conv_output_0</font>)</td></tr><tr><td><i>onnx::Relu(X) = onnx_ops.relu(X)</i></td></tr><tr><td><font color="#cc3355">/layer4/layer4_0/relu/Relu_output_0</font> = <font color="#1666ff">/layer4/layer4.0/relu/Relu</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer4/layer4.0/conv2/Conv" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer4/layer4.0/conv2/Conv</b></td></tr><tr><td><font color="#188855">/layer4/layer4_0/relu/Relu_output_0</font> (shape: (1, 512, 7, 7))</td></tr><tr><td><font color="#188855">onnx_Conv_241</font> (shape: (512, 512, 3, 3))</td></tr><tr><td><font color="#188855">onnx_Conv_242</font> (shape: (512,))</td></tr><tr><td><font color="#1666ff">dilations</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">group</font> = 1</td></tr><tr><td><font color="#1666ff">kernel_shape</font> = [3, 3](list)</td></tr><tr><td><font color="#1666ff">pads</font> = [1, 1, 1, 1](list)</td></tr><tr><td><font color="#1666ff">strides</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">/layer4/layer4.0/conv2/Conv</font> = <i>onnx::Conv</i>(<font color="#188855">/layer4/layer4_0/relu/Relu_output_0</font>, <font color="#188855">onnx_Conv_241</font>, <font color="#188855">onnx_Conv_242</font>)</td></tr><tr><td><i>onnx::Conv(X, W, B) = onnx_ops.conv(X, W, B, auto_pad, dilations, group, kernel_shape, pads, strides)</i></td></tr><tr><td><font color="#cc3355">/layer4/layer4_0/conv2/Conv_output_0</font> = <font color="#1666ff">/layer4/layer4.0/conv2/Conv</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer4/layer4.0/downsample/downsample.0/Conv" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer4/layer4.0/downsample/downsample.0/Conv</b></td></tr><tr><td><font color="#188855">/layer3/layer3_1/relu_1/Relu_output_0</font> (shape: (1, 256, 14, 14))</td></tr><tr><td><font color="#188855">onnx_Conv_244</font> (shape: (512, 256, 1, 1))</td></tr><tr><td><font color="#188855">onnx_Conv_245</font> (shape: (512,))</td></tr><tr><td><font color="#1666ff">dilations</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">group</font> = 1</td></tr><tr><td><font color="#1666ff">kernel_shape</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">pads</font> = [0, 0, 0, 0](list)</td></tr><tr><td><font color="#1666ff">strides</font> = [2, 2](list)</td></tr><tr><td><font color="#1666ff">/layer4/layer4.0/downsample/downsample.0/Conv</font> = <i>onnx::Conv</i>(<font color="#188855">/layer3/layer3_1/relu_1/Relu_output_0</font>, <font color="#188855">onnx_Conv_244</font>, <font color="#188855">onnx_Conv_245</font>)</td></tr><tr><td><i>onnx::Conv(X, W, B) = onnx_ops.conv(X, W, B, auto_pad, dilations, group, kernel_shape, pads, strides)</i></td></tr><tr><td><font color="#cc3355">/layer4/layer4_0/downsample/downsample_0/Conv_output_0</font> = <font color="#1666ff">/layer4/layer4.0/downsample/downsample.0/Conv</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer4/layer4.0/Add" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer4/layer4.0/Add</b></td></tr><tr><td><font color="#188855">/layer4/layer4_0/conv2/Conv_output_0</font> (shape: (1, 512, 7, 7))</td></tr><tr><td><font color="#188855">/layer4/layer4_0/downsample/downsample_0/Conv_output_0</font> (shape: (1, 512, 7, 7))</td></tr><tr><td><font color="#1666ff">/layer4/layer4.0/Add</font> = <i>onnx::Add</i>(<font color="#188855">/layer4/layer4_0/conv2/Conv_output_0</font>, <font color="#188855">/layer4/layer4_0/downsample/downsample_0/Conv_output_0</font>)</td></tr><tr><td><i>onnx::Add(A, B) = onnx_ops.add(A, B)</i></td></tr><tr><td><font color="#cc3355">/layer4/layer4_0/Add_output_0</font> = <font color="#1666ff">/layer4/layer4.0/Add</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer4/layer4.0/relu_1/Relu" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer4/layer4.0/relu_1/Relu</b></td></tr><tr><td><font color="#188855">/layer4/layer4_0/Add_output_0</font> (shape: (1, 512, 7, 7))</td></tr><tr><td><font color="#1666ff">/layer4/layer4.0/relu_1/Relu</font> = <i>onnx::Relu</i>(<font color="#188855">/layer4/layer4_0/Add_output_0</font>)</td></tr><tr><td><i>onnx::Relu(X) = onnx_ops.relu(X)</i></td></tr><tr><td><font color="#cc3355">/layer4/layer4_0/relu_1/Relu_output_0</font> = <font color="#1666ff">/layer4/layer4.0/relu_1/Relu</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer4/layer4.1/conv1/Conv" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer4/layer4.1/conv1/Conv</b></td></tr><tr><td><font color="#188855">/layer4/layer4_0/relu_1/Relu_output_0</font> (shape: (1, 512, 7, 7))</td></tr><tr><td><font color="#188855">onnx_Conv_247</font> (shape: (512, 512, 3, 3))</td></tr><tr><td><font color="#188855">onnx_Conv_248</font> (shape: (512,))</td></tr><tr><td><font color="#1666ff">dilations</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">group</font> = 1</td></tr><tr><td><font color="#1666ff">kernel_shape</font> = [3, 3](list)</td></tr><tr><td><font color="#1666ff">pads</font> = [1, 1, 1, 1](list)</td></tr><tr><td><font color="#1666ff">strides</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">/layer4/layer4.1/conv1/Conv</font> = <i>onnx::Conv</i>(<font color="#188855">/layer4/layer4_0/relu_1/Relu_output_0</font>, <font color="#188855">onnx_Conv_247</font>, <font color="#188855">onnx_Conv_248</font>)</td></tr><tr><td><i>onnx::Conv(X, W, B) = onnx_ops.conv(X, W, B, auto_pad, dilations, group, kernel_shape, pads, strides)</i></td></tr><tr><td><font color="#cc3355">/layer4/layer4_1/conv1/Conv_output_0</font> = <font color="#1666ff">/layer4/layer4.1/conv1/Conv</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer4/layer4.1/relu/Relu" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer4/layer4.1/relu/Relu</b></td></tr><tr><td><font color="#188855">/layer4/layer4_1/conv1/Conv_output_0</font> (shape: (1, 512, 7, 7))</td></tr><tr><td><font color="#1666ff">/layer4/layer4.1/relu/Relu</font> = <i>onnx::Relu</i>(<font color="#188855">/layer4/layer4_1/conv1/Conv_output_0</font>)</td></tr><tr><td><i>onnx::Relu(X) = onnx_ops.relu(X)</i></td></tr><tr><td><font color="#cc3355">/layer4/layer4_1/relu/Relu_output_0</font> = <font color="#1666ff">/layer4/layer4.1/relu/Relu</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer4/layer4.1/conv2/Conv" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer4/layer4.1/conv2/Conv</b></td></tr><tr><td><font color="#188855">/layer4/layer4_1/relu/Relu_output_0</font> (shape: (1, 512, 7, 7))</td></tr><tr><td><font color="#188855">onnx_Conv_250</font> (shape: (512, 512, 3, 3))</td></tr><tr><td><font color="#188855">onnx_Conv_251</font> (shape: (512,))</td></tr><tr><td><font color="#1666ff">dilations</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">group</font> = 1</td></tr><tr><td><font color="#1666ff">kernel_shape</font> = [3, 3](list)</td></tr><tr><td><font color="#1666ff">pads</font> = [1, 1, 1, 1](list)</td></tr><tr><td><font color="#1666ff">strides</font> = [1, 1](list)</td></tr><tr><td><font color="#1666ff">/layer4/layer4.1/conv2/Conv</font> = <i>onnx::Conv</i>(<font color="#188855">/layer4/layer4_1/relu/Relu_output_0</font>, <font color="#188855">onnx_Conv_250</font>, <font color="#188855">onnx_Conv_251</font>)</td></tr><tr><td><i>onnx::Conv(X, W, B) = onnx_ops.conv(X, W, B, auto_pad, dilations, group, kernel_shape, pads, strides)</i></td></tr><tr><td><font color="#cc3355">/layer4/layer4_1/conv2/Conv_output_0</font> = <font color="#1666ff">/layer4/layer4.1/conv2/Conv</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer4/layer4.1/Add" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer4/layer4.1/Add</b></td></tr><tr><td><font color="#188855">/layer4/layer4_1/conv2/Conv_output_0</font> (shape: (1, 512, 7, 7))</td></tr><tr><td><font color="#188855">/layer4/layer4_0/relu_1/Relu_output_0</font> (shape: (1, 512, 7, 7))</td></tr><tr><td><font color="#1666ff">/layer4/layer4.1/Add</font> = <i>onnx::Add</i>(<font color="#188855">/layer4/layer4_1/conv2/Conv_output_0</font>, <font color="#188855">/layer4/layer4_0/relu_1/Relu_output_0</font>)</td></tr><tr><td><i>onnx::Add(A, B) = onnx_ops.add(A, B)</i></td></tr><tr><td><font color="#cc3355">/layer4/layer4_1/Add_output_0</font> = <font color="#1666ff">/layer4/layer4.1/Add</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/layer4/layer4.1/relu_1/Relu" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/layer4/layer4.1/relu_1/Relu</b></td></tr><tr><td><font color="#188855">/layer4/layer4_1/Add_output_0</font> (shape: (1, 512, 7, 7))</td></tr><tr><td><font color="#1666ff">/layer4/layer4.1/relu_1/Relu</font> = <i>onnx::Relu</i>(<font color="#188855">/layer4/layer4_1/Add_output_0</font>)</td></tr><tr><td><i>onnx::Relu(X) = onnx_ops.relu(X)</i></td></tr><tr><td><font color="#cc3355">/layer4/layer4_1/relu_1/Relu_output_0</font> = <font color="#1666ff">/layer4/layer4.1/relu_1/Relu</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/avgpool/GlobalAveragePool" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/avgpool/GlobalAveragePool</b></td></tr><tr><td><font color="#188855">/layer4/layer4_1/relu_1/Relu_output_0</font> (shape: (1, 512, 7, 7))</td></tr><tr><td><font color="#1666ff">/avgpool/GlobalAveragePool</font> = <i>onnx::GlobalAveragePool</i>(<font color="#188855">/layer4/layer4_1/relu_1/Relu_output_0</font>)</td></tr><tr><td><i>onnx::GlobalAveragePool(X) = onnx_ops.globalaveragepool(X)</i></td></tr><tr><td><font color="#cc3355">/avgpool/GlobalAveragePool_output_0</font> = <font color="#1666ff">/avgpool/GlobalAveragePool</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/Flatten" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/Flatten</b></td></tr><tr><td><font color="#188855">/avgpool/GlobalAveragePool_output_0</font> (shape: (1, 512, 1, 1))</td></tr><tr><td><font color="#1666ff">axis</font> = 1</td></tr><tr><td><font color="#1666ff">/Flatten</font> = <i>onnx::Flatten</i>(<font color="#188855">/avgpool/GlobalAveragePool_output_0</font>)</td></tr><tr><td><i>onnx::Flatten(input) = onnx_ops.flatten(input, axis)</i></td></tr><tr><td><font color="#cc3355">/Flatten_output_0</font> = <font color="#1666ff">/Flatten</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"/fc/Gemm" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>/fc/Gemm</b></td></tr><tr><td><font color="#188855">/Flatten_output_0</font> (shape: (1, 512))</td></tr><tr><td><font color="#188855">fc_weight</font> (shape: (1000, 512))</td></tr><tr><td><font color="#188855">fc_bias</font> (shape: (1000,))</td></tr><tr><td><font color="#1666ff">alpha</font> = 1.0</td></tr><tr><td><font color="#1666ff">beta</font> = 1.0</td></tr><tr><td><font color="#1666ff">transB</font> = 1</td></tr><tr><td><font color="#1666ff">/fc/Gemm</font> = <i>onnx::Gemm</i>(<font color="#188855">/Flatten_output_0</font>, <font color="#188855">fc_weight</font>, <font color="#188855">fc_bias</font>)</td></tr><tr><td><i>onnx::Gemm(A, B, C) = onnx_ops.gemm(A, B, C, alpha, beta, transA, transB)</i></td></tr><tr><td><font color="#cc3355">_191</font> = <font color="#1666ff">/fc/Gemm</font> </td></tr></table>>]
	Identity_0 -> "/layer4/layer4.1/conv2/Conv" [label=<Identity_0.onnx_Conv_251_/layer4/layer4.1/conv2/Conv.onnx_Conv_251 (<font color="#cc3355">onnx_Conv_251</font> -&gt; <font color="#188855">onnx_Conv_251</font>)> arrowhead=empty]
	Identity_1 -> "/layer4/layer4.1/conv1/Conv" [label=<Identity_1.onnx_Conv_248_/layer4/layer4.1/conv1/Conv.onnx_Conv_248 (<font color="#cc3355">onnx_Conv_248</font> -&gt; <font color="#188855">onnx_Conv_248</font>)> arrowhead=empty]
	Identity_2 -> "/layer4/layer4.0/downsample/downsample.0/Conv" [label=<Identity_2.onnx_Conv_245_/layer4/layer4.0/downsample/downsample.0/Conv.onnx_Conv_245 (<font color="#cc3355">onnx_Conv_245</font> -&gt; <font color="#188855">onnx_Conv_245</font>)> arrowhead=empty]
	Identity_3 -> "/layer4/layer4.0/conv2/Conv" [label=<Identity_3.onnx_Conv_242_/layer4/layer4.0/conv2/Conv.onnx_Conv_242 (<font color="#cc3355">onnx_Conv_242</font> -&gt; <font color="#188855">onnx_Conv_242</font>)> arrowhead=empty]
	Identity_4 -> "/layer3/layer3.1/conv2/Conv" [label=<Identity_4.onnx_Conv_236_/layer3/layer3.1/conv2/Conv.onnx_Conv_236 (<font color="#cc3355">onnx_Conv_236</font> -&gt; <font color="#188855">onnx_Conv_236</font>)> arrowhead=empty]
	Identity_5 -> "/layer3/layer3.1/conv1/Conv" [label=<Identity_5.onnx_Conv_233_/layer3/layer3.1/conv1/Conv.onnx_Conv_233 (<font color="#cc3355">onnx_Conv_233</font> -&gt; <font color="#188855">onnx_Conv_233</font>)> arrowhead=empty]
	Identity_6 -> "/layer3/layer3.0/downsample/downsample.0/Conv" [label=<Identity_6.onnx_Conv_230_/layer3/layer3.0/downsample/downsample.0/Conv.onnx_Conv_230 (<font color="#cc3355">onnx_Conv_230</font> -&gt; <font color="#188855">onnx_Conv_230</font>)> arrowhead=empty]
	Identity_7 -> "/layer3/layer3.0/conv2/Conv" [label=<Identity_7.onnx_Conv_227_/layer3/layer3.0/conv2/Conv.onnx_Conv_227 (<font color="#cc3355">onnx_Conv_227</font> -&gt; <font color="#188855">onnx_Conv_227</font>)> arrowhead=empty]
	Identity_8 -> "/layer2/layer2.1/conv2/Conv" [label=<Identity_8.onnx_Conv_221_/layer2/layer2.1/conv2/Conv.onnx_Conv_221 (<font color="#cc3355">onnx_Conv_221</font> -&gt; <font color="#188855">onnx_Conv_221</font>)> arrowhead=empty]
	Identity_9 -> "/layer2/layer2.1/conv1/Conv" [label=<Identity_9.onnx_Conv_218_/layer2/layer2.1/conv1/Conv.onnx_Conv_218 (<font color="#cc3355">onnx_Conv_218</font> -&gt; <font color="#188855">onnx_Conv_218</font>)> arrowhead=empty]
	Identity_10 -> "/layer2/layer2.0/downsample/downsample.0/Conv" [label=<Identity_10.onnx_Conv_215_/layer2/layer2.0/downsample/downsample.0/Conv.onnx_Conv_215 (<font color="#cc3355">onnx_Conv_215</font> -&gt; <font color="#188855">onnx_Conv_215</font>)> arrowhead=empty]
	Identity_11 -> "/layer2/layer2.0/conv2/Conv" [label=<Identity_11.onnx_Conv_212_/layer2/layer2.0/conv2/Conv.onnx_Conv_212 (<font color="#cc3355">onnx_Conv_212</font> -&gt; <font color="#188855">onnx_Conv_212</font>)> arrowhead=empty]
	Identity_12 -> "/layer1/layer1.1/conv2/Conv" [label=<Identity_12.onnx_Conv_206_/layer1/layer1.1/conv2/Conv.onnx_Conv_206 (<font color="#cc3355">onnx_Conv_206</font> -&gt; <font color="#188855">onnx_Conv_206</font>)> arrowhead=empty]
	Identity_13 -> "/layer1/layer1.1/conv1/Conv" [label=<Identity_13.onnx_Conv_203_/layer1/layer1.1/conv1/Conv.onnx_Conv_203 (<font color="#cc3355">onnx_Conv_203</font> -&gt; <font color="#188855">onnx_Conv_203</font>)> arrowhead=empty]
	Identity_14 -> "/layer1/layer1.0/conv2/Conv" [label=<Identity_14.onnx_Conv_200_/layer1/layer1.0/conv2/Conv.onnx_Conv_200 (<font color="#cc3355">onnx_Conv_200</font> -&gt; <font color="#188855">onnx_Conv_200</font>)> arrowhead=empty]
	Identity_15 -> "/layer1/layer1.0/conv1/Conv" [label=<Identity_15.onnx_Conv_197_/layer1/layer1.0/conv1/Conv.onnx_Conv_197 (<font color="#cc3355">onnx_Conv_197</font> -&gt; <font color="#188855">onnx_Conv_197</font>)> arrowhead=empty]
	"/conv1/Conv" -> "/relu/Relu" [label=</conv1/Conv./conv1/Conv_output_0_/relu/Relu./conv1/Conv_output_0 (<font color="#cc3355">/conv1/Conv_output_0</font> -&gt; <font color="#188855">/conv1/Conv_output_0</font>)> arrowhead=empty]
	"/relu/Relu" -> "/maxpool/MaxPool" [label=</relu/Relu./relu/Relu_output_0_/maxpool/MaxPool./relu/Relu_output_0 (<font color="#cc3355">/relu/Relu_output_0</font> -&gt; <font color="#188855">/relu/Relu_output_0</font>)> arrowhead=empty]
	"/maxpool/MaxPool" -> "/layer1/layer1.0/conv1/Conv" [label=</maxpool/MaxPool./maxpool/MaxPool_output_0_/layer1/layer1.0/conv1/Conv./maxpool/MaxPool_output_0 (<font color="#cc3355">/maxpool/MaxPool_output_0</font> -&gt; <font color="#188855">/maxpool/MaxPool_output_0</font>)> arrowhead=empty]
	"/maxpool/MaxPool" -> "/layer1/layer1.0/Add" [label=</maxpool/MaxPool./maxpool/MaxPool_output_0_/layer1/layer1.0/Add./maxpool/MaxPool_output_0 (<font color="#cc3355">/maxpool/MaxPool_output_0</font> -&gt; <font color="#188855">/maxpool/MaxPool_output_0</font>)> arrowhead=empty]
	"/layer1/layer1.0/conv1/Conv" -> "/layer1/layer1.0/relu/Relu" [label=</layer1/layer1.0/conv1/Conv./layer1/layer1_0/conv1/Conv_output_0_/layer1/layer1.0/relu/Relu./layer1/layer1_0/conv1/Conv_output_0 (<font color="#cc3355">/layer1/layer1_0/conv1/Conv_output_0</font> -&gt; <font color="#188855">/layer1/layer1_0/conv1/Conv_output_0</font>)> arrowhead=empty]
	"/layer1/layer1.0/relu/Relu" -> "/layer1/layer1.0/conv2/Conv" [label=</layer1/layer1.0/relu/Relu./layer1/layer1_0/relu/Relu_output_0_/layer1/layer1.0/conv2/Conv./layer1/layer1_0/relu/Relu_output_0 (<font color="#cc3355">/layer1/layer1_0/relu/Relu_output_0</font> -&gt; <font color="#188855">/layer1/layer1_0/relu/Relu_output_0</font>)> arrowhead=empty]
	"/layer1/layer1.0/conv2/Conv" -> "/layer1/layer1.0/Add" [label=</layer1/layer1.0/conv2/Conv./layer1/layer1_0/conv2/Conv_output_0_/layer1/layer1.0/Add./layer1/layer1_0/conv2/Conv_output_0 (<font color="#cc3355">/layer1/layer1_0/conv2/Conv_output_0</font> -&gt; <font color="#188855">/layer1/layer1_0/conv2/Conv_output_0</font>)> arrowhead=empty]
	"/layer1/layer1.0/Add" -> "/layer1/layer1.0/relu_1/Relu" [label=</layer1/layer1.0/Add./layer1/layer1_0/Add_output_0_/layer1/layer1.0/relu_1/Relu./layer1/layer1_0/Add_output_0 (<font color="#cc3355">/layer1/layer1_0/Add_output_0</font> -&gt; <font color="#188855">/layer1/layer1_0/Add_output_0</font>)> arrowhead=empty]
	"/layer1/layer1.0/relu_1/Relu" -> "/layer1/layer1.1/conv1/Conv" [label=</layer1/layer1.0/relu_1/Relu./layer1/layer1_0/relu_1/Relu_output_0_/layer1/layer1.1/conv1/Conv./layer1/layer1_0/relu_1/Relu_output_0 (<font color="#cc3355">/layer1/layer1_0/relu_1/Relu_output_0</font> -&gt; <font color="#188855">/layer1/layer1_0/relu_1/Relu_output_0</font>)> arrowhead=empty]
	"/layer1/layer1.0/relu_1/Relu" -> "/layer1/layer1.1/Add" [label=</layer1/layer1.0/relu_1/Relu./layer1/layer1_0/relu_1/Relu_output_0_/layer1/layer1.1/Add./layer1/layer1_0/relu_1/Relu_output_0 (<font color="#cc3355">/layer1/layer1_0/relu_1/Relu_output_0</font> -&gt; <font color="#188855">/layer1/layer1_0/relu_1/Relu_output_0</font>)> arrowhead=empty]
	"/layer1/layer1.1/conv1/Conv" -> "/layer1/layer1.1/relu/Relu" [label=</layer1/layer1.1/conv1/Conv./layer1/layer1_1/conv1/Conv_output_0_/layer1/layer1.1/relu/Relu./layer1/layer1_1/conv1/Conv_output_0 (<font color="#cc3355">/layer1/layer1_1/conv1/Conv_output_0</font> -&gt; <font color="#188855">/layer1/layer1_1/conv1/Conv_output_0</font>)> arrowhead=empty]
	"/layer1/layer1.1/relu/Relu" -> "/layer1/layer1.1/conv2/Conv" [label=</layer1/layer1.1/relu/Relu./layer1/layer1_1/relu/Relu_output_0_/layer1/layer1.1/conv2/Conv./layer1/layer1_1/relu/Relu_output_0 (<font color="#cc3355">/layer1/layer1_1/relu/Relu_output_0</font> -&gt; <font color="#188855">/layer1/layer1_1/relu/Relu_output_0</font>)> arrowhead=empty]
	"/layer1/layer1.1/conv2/Conv" -> "/layer1/layer1.1/Add" [label=</layer1/layer1.1/conv2/Conv./layer1/layer1_1/conv2/Conv_output_0_/layer1/layer1.1/Add./layer1/layer1_1/conv2/Conv_output_0 (<font color="#cc3355">/layer1/layer1_1/conv2/Conv_output_0</font> -&gt; <font color="#188855">/layer1/layer1_1/conv2/Conv_output_0</font>)> arrowhead=empty]
	"/layer1/layer1.1/Add" -> "/layer1/layer1.1/relu_1/Relu" [label=</layer1/layer1.1/Add./layer1/layer1_1/Add_output_0_/layer1/layer1.1/relu_1/Relu./layer1/layer1_1/Add_output_0 (<font color="#cc3355">/layer1/layer1_1/Add_output_0</font> -&gt; <font color="#188855">/layer1/layer1_1/Add_output_0</font>)> arrowhead=empty]
	"/layer1/layer1.1/relu_1/Relu" -> "/layer2/layer2.0/conv1/Conv" [label=</layer1/layer1.1/relu_1/Relu./layer1/layer1_1/relu_1/Relu_output_0_/layer2/layer2.0/conv1/Conv./layer1/layer1_1/relu_1/Relu_output_0 (<font color="#cc3355">/layer1/layer1_1/relu_1/Relu_output_0</font> -&gt; <font color="#188855">/layer1/layer1_1/relu_1/Relu_output_0</font>)> arrowhead=empty]
	"/layer1/layer1.1/relu_1/Relu" -> "/layer2/layer2.0/downsample/downsample.0/Conv" [label=</layer1/layer1.1/relu_1/Relu./layer1/layer1_1/relu_1/Relu_output_0_/layer2/layer2.0/downsample/downsample.0/Conv./layer1/layer1_1/relu_1/Relu_output_0 (<font color="#cc3355">/layer1/layer1_1/relu_1/Relu_output_0</font> -&gt; <font color="#188855">/layer1/layer1_1/relu_1/Relu_output_0</font>)> arrowhead=empty]
	"/layer2/layer2.0/conv1/Conv" -> "/layer2/layer2.0/relu/Relu" [label=</layer2/layer2.0/conv1/Conv./layer2/layer2_0/conv1/Conv_output_0_/layer2/layer2.0/relu/Relu./layer2/layer2_0/conv1/Conv_output_0 (<font color="#cc3355">/layer2/layer2_0/conv1/Conv_output_0</font> -&gt; <font color="#188855">/layer2/layer2_0/conv1/Conv_output_0</font>)> arrowhead=empty]
	"/layer2/layer2.0/relu/Relu" -> "/layer2/layer2.0/conv2/Conv" [label=</layer2/layer2.0/relu/Relu./layer2/layer2_0/relu/Relu_output_0_/layer2/layer2.0/conv2/Conv./layer2/layer2_0/relu/Relu_output_0 (<font color="#cc3355">/layer2/layer2_0/relu/Relu_output_0</font> -&gt; <font color="#188855">/layer2/layer2_0/relu/Relu_output_0</font>)> arrowhead=empty]
	"/layer2/layer2.0/conv2/Conv" -> "/layer2/layer2.0/Add" [label=</layer2/layer2.0/conv2/Conv./layer2/layer2_0/conv2/Conv_output_0_/layer2/layer2.0/Add./layer2/layer2_0/conv2/Conv_output_0 (<font color="#cc3355">/layer2/layer2_0/conv2/Conv_output_0</font> -&gt; <font color="#188855">/layer2/layer2_0/conv2/Conv_output_0</font>)> arrowhead=empty]
	"/layer2/layer2.0/downsample/downsample.0/Conv" -> "/layer2/layer2.0/Add" [label=</layer2/layer2.0/downsample/downsample.0/Conv./layer2/layer2_0/downsample/downsample_0/Conv_output_0_/layer2/layer2.0/Add./layer2/layer2_0/downsample/downsample_0/Conv_output_0 (<font color="#cc3355">/layer2/layer2_0/downsample/downsample_0/Conv_output_0</font> -&gt; <font color="#188855">/layer2/layer2_0/downsample/downsample_0/Conv_output_0</font>)> arrowhead=empty]
	"/layer2/layer2.0/Add" -> "/layer2/layer2.0/relu_1/Relu" [label=</layer2/layer2.0/Add./layer2/layer2_0/Add_output_0_/layer2/layer2.0/relu_1/Relu./layer2/layer2_0/Add_output_0 (<font color="#cc3355">/layer2/layer2_0/Add_output_0</font> -&gt; <font color="#188855">/layer2/layer2_0/Add_output_0</font>)> arrowhead=empty]
	"/layer2/layer2.0/relu_1/Relu" -> "/layer2/layer2.1/conv1/Conv" [label=</layer2/layer2.0/relu_1/Relu./layer2/layer2_0/relu_1/Relu_output_0_/layer2/layer2.1/conv1/Conv./layer2/layer2_0/relu_1/Relu_output_0 (<font color="#cc3355">/layer2/layer2_0/relu_1/Relu_output_0</font> -&gt; <font color="#188855">/layer2/layer2_0/relu_1/Relu_output_0</font>)> arrowhead=empty]
	"/layer2/layer2.0/relu_1/Relu" -> "/layer2/layer2.1/Add" [label=</layer2/layer2.0/relu_1/Relu./layer2/layer2_0/relu_1/Relu_output_0_/layer2/layer2.1/Add./layer2/layer2_0/relu_1/Relu_output_0 (<font color="#cc3355">/layer2/layer2_0/relu_1/Relu_output_0</font> -&gt; <font color="#188855">/layer2/layer2_0/relu_1/Relu_output_0</font>)> arrowhead=empty]
	"/layer2/layer2.1/conv1/Conv" -> "/layer2/layer2.1/relu/Relu" [label=</layer2/layer2.1/conv1/Conv./layer2/layer2_1/conv1/Conv_output_0_/layer2/layer2.1/relu/Relu./layer2/layer2_1/conv1/Conv_output_0 (<font color="#cc3355">/layer2/layer2_1/conv1/Conv_output_0</font> -&gt; <font color="#188855">/layer2/layer2_1/conv1/Conv_output_0</font>)> arrowhead=empty]
	"/layer2/layer2.1/relu/Relu" -> "/layer2/layer2.1/conv2/Conv" [label=</layer2/layer2.1/relu/Relu./layer2/layer2_1/relu/Relu_output_0_/layer2/layer2.1/conv2/Conv./layer2/layer2_1/relu/Relu_output_0 (<font color="#cc3355">/layer2/layer2_1/relu/Relu_output_0</font> -&gt; <font color="#188855">/layer2/layer2_1/relu/Relu_output_0</font>)> arrowhead=empty]
	"/layer2/layer2.1/conv2/Conv" -> "/layer2/layer2.1/Add" [label=</layer2/layer2.1/conv2/Conv./layer2/layer2_1/conv2/Conv_output_0_/layer2/layer2.1/Add./layer2/layer2_1/conv2/Conv_output_0 (<font color="#cc3355">/layer2/layer2_1/conv2/Conv_output_0</font> -&gt; <font color="#188855">/layer2/layer2_1/conv2/Conv_output_0</font>)> arrowhead=empty]
	"/layer2/layer2.1/Add" -> "/layer2/layer2.1/relu_1/Relu" [label=</layer2/layer2.1/Add./layer2/layer2_1/Add_output_0_/layer2/layer2.1/relu_1/Relu./layer2/layer2_1/Add_output_0 (<font color="#cc3355">/layer2/layer2_1/Add_output_0</font> -&gt; <font color="#188855">/layer2/layer2_1/Add_output_0</font>)> arrowhead=empty]
	"/layer2/layer2.1/relu_1/Relu" -> "/layer3/layer3.0/conv1/Conv" [label=</layer2/layer2.1/relu_1/Relu./layer2/layer2_1/relu_1/Relu_output_0_/layer3/layer3.0/conv1/Conv./layer2/layer2_1/relu_1/Relu_output_0 (<font color="#cc3355">/layer2/layer2_1/relu_1/Relu_output_0</font> -&gt; <font color="#188855">/layer2/layer2_1/relu_1/Relu_output_0</font>)> arrowhead=empty]
	"/layer2/layer2.1/relu_1/Relu" -> "/layer3/layer3.0/downsample/downsample.0/Conv" [label=</layer2/layer2.1/relu_1/Relu./layer2/layer2_1/relu_1/Relu_output_0_/layer3/layer3.0/downsample/downsample.0/Conv./layer2/layer2_1/relu_1/Relu_output_0 (<font color="#cc3355">/layer2/layer2_1/relu_1/Relu_output_0</font> -&gt; <font color="#188855">/layer2/layer2_1/relu_1/Relu_output_0</font>)> arrowhead=empty]
	"/layer3/layer3.0/conv1/Conv" -> "/layer3/layer3.0/relu/Relu" [label=</layer3/layer3.0/conv1/Conv./layer3/layer3_0/conv1/Conv_output_0_/layer3/layer3.0/relu/Relu./layer3/layer3_0/conv1/Conv_output_0 (<font color="#cc3355">/layer3/layer3_0/conv1/Conv_output_0</font> -&gt; <font color="#188855">/layer3/layer3_0/conv1/Conv_output_0</font>)> arrowhead=empty]
	"/layer3/layer3.0/relu/Relu" -> "/layer3/layer3.0/conv2/Conv" [label=</layer3/layer3.0/relu/Relu./layer3/layer3_0/relu/Relu_output_0_/layer3/layer3.0/conv2/Conv./layer3/layer3_0/relu/Relu_output_0 (<font color="#cc3355">/layer3/layer3_0/relu/Relu_output_0</font> -&gt; <font color="#188855">/layer3/layer3_0/relu/Relu_output_0</font>)> arrowhead=empty]
	"/layer3/layer3.0/conv2/Conv" -> "/layer3/layer3.0/Add" [label=</layer3/layer3.0/conv2/Conv./layer3/layer3_0/conv2/Conv_output_0_/layer3/layer3.0/Add./layer3/layer3_0/conv2/Conv_output_0 (<font color="#cc3355">/layer3/layer3_0/conv2/Conv_output_0</font> -&gt; <font color="#188855">/layer3/layer3_0/conv2/Conv_output_0</font>)> arrowhead=empty]
	"/layer3/layer3.0/downsample/downsample.0/Conv" -> "/layer3/layer3.0/Add" [label=</layer3/layer3.0/downsample/downsample.0/Conv./layer3/layer3_0/downsample/downsample_0/Conv_output_0_/layer3/layer3.0/Add./layer3/layer3_0/downsample/downsample_0/Conv_output_0 (<font color="#cc3355">/layer3/layer3_0/downsample/downsample_0/Conv_output_0</font> -&gt; <font color="#188855">/layer3/layer3_0/downsample/downsample_0/Conv_output_0</font>)> arrowhead=empty]
	"/layer3/layer3.0/Add" -> "/layer3/layer3.0/relu_1/Relu" [label=</layer3/layer3.0/Add./layer3/layer3_0/Add_output_0_/layer3/layer3.0/relu_1/Relu./layer3/layer3_0/Add_output_0 (<font color="#cc3355">/layer3/layer3_0/Add_output_0</font> -&gt; <font color="#188855">/layer3/layer3_0/Add_output_0</font>)> arrowhead=empty]
	"/layer3/layer3.0/relu_1/Relu" -> "/layer3/layer3.1/conv1/Conv" [label=</layer3/layer3.0/relu_1/Relu./layer3/layer3_0/relu_1/Relu_output_0_/layer3/layer3.1/conv1/Conv./layer3/layer3_0/relu_1/Relu_output_0 (<font color="#cc3355">/layer3/layer3_0/relu_1/Relu_output_0</font> -&gt; <font color="#188855">/layer3/layer3_0/relu_1/Relu_output_0</font>)> arrowhead=empty]
	"/layer3/layer3.0/relu_1/Relu" -> "/layer3/layer3.1/Add" [label=</layer3/layer3.0/relu_1/Relu./layer3/layer3_0/relu_1/Relu_output_0_/layer3/layer3.1/Add./layer3/layer3_0/relu_1/Relu_output_0 (<font color="#cc3355">/layer3/layer3_0/relu_1/Relu_output_0</font> -&gt; <font color="#188855">/layer3/layer3_0/relu_1/Relu_output_0</font>)> arrowhead=empty]
	"/layer3/layer3.1/conv1/Conv" -> "/layer3/layer3.1/relu/Relu" [label=</layer3/layer3.1/conv1/Conv./layer3/layer3_1/conv1/Conv_output_0_/layer3/layer3.1/relu/Relu./layer3/layer3_1/conv1/Conv_output_0 (<font color="#cc3355">/layer3/layer3_1/conv1/Conv_output_0</font> -&gt; <font color="#188855">/layer3/layer3_1/conv1/Conv_output_0</font>)> arrowhead=empty]
	"/layer3/layer3.1/relu/Relu" -> "/layer3/layer3.1/conv2/Conv" [label=</layer3/layer3.1/relu/Relu./layer3/layer3_1/relu/Relu_output_0_/layer3/layer3.1/conv2/Conv./layer3/layer3_1/relu/Relu_output_0 (<font color="#cc3355">/layer3/layer3_1/relu/Relu_output_0</font> -&gt; <font color="#188855">/layer3/layer3_1/relu/Relu_output_0</font>)> arrowhead=empty]
	"/layer3/layer3.1/conv2/Conv" -> "/layer3/layer3.1/Add" [label=</layer3/layer3.1/conv2/Conv./layer3/layer3_1/conv2/Conv_output_0_/layer3/layer3.1/Add./layer3/layer3_1/conv2/Conv_output_0 (<font color="#cc3355">/layer3/layer3_1/conv2/Conv_output_0</font> -&gt; <font color="#188855">/layer3/layer3_1/conv2/Conv_output_0</font>)> arrowhead=empty]
	"/layer3/layer3.1/Add" -> "/layer3/layer3.1/relu_1/Relu" [label=</layer3/layer3.1/Add./layer3/layer3_1/Add_output_0_/layer3/layer3.1/relu_1/Relu./layer3/layer3_1/Add_output_0 (<font color="#cc3355">/layer3/layer3_1/Add_output_0</font> -&gt; <font color="#188855">/layer3/layer3_1/Add_output_0</font>)> arrowhead=empty]
	"/layer3/layer3.1/relu_1/Relu" -> "/layer4/layer4.0/conv1/Conv" [label=</layer3/layer3.1/relu_1/Relu./layer3/layer3_1/relu_1/Relu_output_0_/layer4/layer4.0/conv1/Conv./layer3/layer3_1/relu_1/Relu_output_0 (<font color="#cc3355">/layer3/layer3_1/relu_1/Relu_output_0</font> -&gt; <font color="#188855">/layer3/layer3_1/relu_1/Relu_output_0</font>)> arrowhead=empty]
	"/layer3/layer3.1/relu_1/Relu" -> "/layer4/layer4.0/downsample/downsample.0/Conv" [label=</layer3/layer3.1/relu_1/Relu./layer3/layer3_1/relu_1/Relu_output_0_/layer4/layer4.0/downsample/downsample.0/Conv./layer3/layer3_1/relu_1/Relu_output_0 (<font color="#cc3355">/layer3/layer3_1/relu_1/Relu_output_0</font> -&gt; <font color="#188855">/layer3/layer3_1/relu_1/Relu_output_0</font>)> arrowhead=empty]
	"/layer4/layer4.0/conv1/Conv" -> "/layer4/layer4.0/relu/Relu" [label=</layer4/layer4.0/conv1/Conv./layer4/layer4_0/conv1/Conv_output_0_/layer4/layer4.0/relu/Relu./layer4/layer4_0/conv1/Conv_output_0 (<font color="#cc3355">/layer4/layer4_0/conv1/Conv_output_0</font> -&gt; <font color="#188855">/layer4/layer4_0/conv1/Conv_output_0</font>)> arrowhead=empty]
	"/layer4/layer4.0/relu/Relu" -> "/layer4/layer4.0/conv2/Conv" [label=</layer4/layer4.0/relu/Relu./layer4/layer4_0/relu/Relu_output_0_/layer4/layer4.0/conv2/Conv./layer4/layer4_0/relu/Relu_output_0 (<font color="#cc3355">/layer4/layer4_0/relu/Relu_output_0</font> -&gt; <font color="#188855">/layer4/layer4_0/relu/Relu_output_0</font>)> arrowhead=empty]
	"/layer4/layer4.0/conv2/Conv" -> "/layer4/layer4.0/Add" [label=</layer4/layer4.0/conv2/Conv./layer4/layer4_0/conv2/Conv_output_0_/layer4/layer4.0/Add./layer4/layer4_0/conv2/Conv_output_0 (<font color="#cc3355">/layer4/layer4_0/conv2/Conv_output_0</font> -&gt; <font color="#188855">/layer4/layer4_0/conv2/Conv_output_0</font>)> arrowhead=empty]
	"/layer4/layer4.0/downsample/downsample.0/Conv" -> "/layer4/layer4.0/Add" [label=</layer4/layer4.0/downsample/downsample.0/Conv./layer4/layer4_0/downsample/downsample_0/Conv_output_0_/layer4/layer4.0/Add./layer4/layer4_0/downsample/downsample_0/Conv_output_0 (<font color="#cc3355">/layer4/layer4_0/downsample/downsample_0/Conv_output_0</font> -&gt; <font color="#188855">/layer4/layer4_0/downsample/downsample_0/Conv_output_0</font>)> arrowhead=empty]
	"/layer4/layer4.0/Add" -> "/layer4/layer4.0/relu_1/Relu" [label=</layer4/layer4.0/Add./layer4/layer4_0/Add_output_0_/layer4/layer4.0/relu_1/Relu./layer4/layer4_0/Add_output_0 (<font color="#cc3355">/layer4/layer4_0/Add_output_0</font> -&gt; <font color="#188855">/layer4/layer4_0/Add_output_0</font>)> arrowhead=empty]
	"/layer4/layer4.0/relu_1/Relu" -> "/layer4/layer4.1/conv1/Conv" [label=</layer4/layer4.0/relu_1/Relu./layer4/layer4_0/relu_1/Relu_output_0_/layer4/layer4.1/conv1/Conv./layer4/layer4_0/relu_1/Relu_output_0 (<font color="#cc3355">/layer4/layer4_0/relu_1/Relu_output_0</font> -&gt; <font color="#188855">/layer4/layer4_0/relu_1/Relu_output_0</font>)> arrowhead=empty]
	"/layer4/layer4.0/relu_1/Relu" -> "/layer4/layer4.1/Add" [label=</layer4/layer4.0/relu_1/Relu./layer4/layer4_0/relu_1/Relu_output_0_/layer4/layer4.1/Add./layer4/layer4_0/relu_1/Relu_output_0 (<font color="#cc3355">/layer4/layer4_0/relu_1/Relu_output_0</font> -&gt; <font color="#188855">/layer4/layer4_0/relu_1/Relu_output_0</font>)> arrowhead=empty]
	"/layer4/layer4.1/conv1/Conv" -> "/layer4/layer4.1/relu/Relu" [label=</layer4/layer4.1/conv1/Conv./layer4/layer4_1/conv1/Conv_output_0_/layer4/layer4.1/relu/Relu./layer4/layer4_1/conv1/Conv_output_0 (<font color="#cc3355">/layer4/layer4_1/conv1/Conv_output_0</font> -&gt; <font color="#188855">/layer4/layer4_1/conv1/Conv_output_0</font>)> arrowhead=empty]
	"/layer4/layer4.1/relu/Relu" -> "/layer4/layer4.1/conv2/Conv" [label=</layer4/layer4.1/relu/Relu./layer4/layer4_1/relu/Relu_output_0_/layer4/layer4.1/conv2/Conv./layer4/layer4_1/relu/Relu_output_0 (<font color="#cc3355">/layer4/layer4_1/relu/Relu_output_0</font> -&gt; <font color="#188855">/layer4/layer4_1/relu/Relu_output_0</font>)> arrowhead=empty]
	"/layer4/layer4.1/conv2/Conv" -> "/layer4/layer4.1/Add" [label=</layer4/layer4.1/conv2/Conv./layer4/layer4_1/conv2/Conv_output_0_/layer4/layer4.1/Add./layer4/layer4_1/conv2/Conv_output_0 (<font color="#cc3355">/layer4/layer4_1/conv2/Conv_output_0</font> -&gt; <font color="#188855">/layer4/layer4_1/conv2/Conv_output_0</font>)> arrowhead=empty]
	"/layer4/layer4.1/Add" -> "/layer4/layer4.1/relu_1/Relu" [label=</layer4/layer4.1/Add./layer4/layer4_1/Add_output_0_/layer4/layer4.1/relu_1/Relu./layer4/layer4_1/Add_output_0 (<font color="#cc3355">/layer4/layer4_1/Add_output_0</font> -&gt; <font color="#188855">/layer4/layer4_1/Add_output_0</font>)> arrowhead=empty]
	"/layer4/layer4.1/relu_1/Relu" -> "/avgpool/GlobalAveragePool" [label=</layer4/layer4.1/relu_1/Relu./layer4/layer4_1/relu_1/Relu_output_0_/avgpool/GlobalAveragePool./layer4/layer4_1/relu_1/Relu_output_0 (<font color="#cc3355">/layer4/layer4_1/relu_1/Relu_output_0</font> -&gt; <font color="#188855">/layer4/layer4_1/relu_1/Relu_output_0</font>)> arrowhead=empty]
	"/avgpool/GlobalAveragePool" -> "/Flatten" [label=</avgpool/GlobalAveragePool./avgpool/GlobalAveragePool_output_0_/Flatten./avgpool/GlobalAveragePool_output_0 (<font color="#cc3355">/avgpool/GlobalAveragePool_output_0</font> -&gt; <font color="#188855">/avgpool/GlobalAveragePool_output_0</font>)> arrowhead=empty]
	"/Flatten" -> "/fc/Gemm" [label=</Flatten./Flatten_output_0_/fc/Gemm./Flatten_output_0 (<font color="#cc3355">/Flatten_output_0</font> -&gt; <font color="#188855">/Flatten_output_0</font>)> arrowhead=empty]
}
