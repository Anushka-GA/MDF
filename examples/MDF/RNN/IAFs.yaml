IAFs:
    format: ModECI MDF v0.4
    generating_application: Python modeci-mdf v0.4.4
    graphs:
        iaf_example:
            nodes:
                input_node:
                    parameters:
                        time:
                            default_initial_value: 0
                            time_derivative: '1'
                        start:
                            value: 20
                        duration:
                            value: 60
                        amplitude:
                            value: 10
                        level:
                            value: 0
                            conditions:
                            -   id: 'on'
                                test: time > start and time < start + duration
                                value: amplitude
                            -   id: 'off'
                                test: time > start + duration
                                value: amplitude*0
                    output_ports:
                        out_port:
                            value: level
                iaf_node:
                    input_ports:
                        input: {}
                    parameters:
                        v0:
                            value: -60
                        erev:
                            value: -70
                        tau:
                            value: 10.0
                        thresh:
                            value: -20.0
                        spiking:
                            default_initial_value: '0'
                            conditions:
                            -   id: is_spiking
                                test: v >= thresh
                                value: '1'
                            -   id: not_spiking
                                test: v < thresh
                                value: '0'
                        v:
                            default_initial_value: v0
                            time_derivative: -1 * (v-erev)/tau + input
                            conditions:
                            -   id: reset
                                test: v > thresh
                                value: erev
                    output_ports:
                        out_port_v:
                            value: v
            edges:
                input_edge:
                    sender: input_node
                    receiver: iaf_node
                    sender_port: out_port
                    receiver_port: input
                    parameters:
                        weight: 1
